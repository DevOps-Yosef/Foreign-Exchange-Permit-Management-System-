@model ZB_FEPMS.Models.tblPermitAmount

@{
    ViewBag.Title = "Purchase Order Permit";
    Layout = "~/Views/Shared/_FEPMSLayout.cshtml";
}

@if (TempData["sErrMsg"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>@TempData["sErrMsg"]</strong>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="panel panel-primary">
        <div class="panel-heading">Update Purchase Order Permit Amount</div>
        <div class="panel-body">
            @Html.HiddenFor(model => model.tblPermit.CurrencyType, new { @id = "CurrencyType" })
            @Html.HiddenFor(model => model.PermitId)
            @Html.HiddenFor(model => model.MerchantId)

            <div class="row">

                <div class="row">
                    @Html.Label("PO #:", new { @Class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        <span class="label-permit-number-style">
                            @Model.tblPermit.PermitNumber
                        </span>
                    </div>
                </div>

                <div class="row grid-row">
                    @Html.Label("Importer Name:", new { @Class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        <span class="label-underline-style">
                            @Model.tblPermit.tblMerchant.ImporterName
                        </span>
                    </div>
                    @Html.Label("Tin #:", new { @Class = "control-label col-sm-1" })
                    <div class="col-sm-2">
                        <span class="label-underline-style">
                            @Model.tblPermit.tblMerchant.TinNumber
                        </span>
                    </div>
                    @Html.Label("NBE #:", new { @Class = "control-label col-sm-1" })
                    <div class="col-sm-2">
                        <span class="label-underline-style">
                            @Model.tblPermit.tblMerchant.NBENumber
                        </span>
                    </div>
                </div>

                <div class="row grid-row">
                    @Html.Label("Current Amount:", new { @Class = "control-label col-sm-2" })
                    <div class="col-sm-3">
                        <span class="label-underline-style">
                            @Model.tblPermit.RemainingAmount.Value.ToString("N2")
                        </span>
                    </div>
                    @Html.Label("Port Of Destination:", new { @Class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @{
                            if (Model.tblPermit.tbl_lu_PortOfDestination != null)
                            {
                                <span class="label-underline-style">
                                    @string.Join(", ", Model.tblPermit.tbl_lu_PortOfDestination.Select(tlpod => tlpod.name).ToList())
                                </span>
                            }
                        }
                    </div>

                </div>


                <div class="row grid-row">
                    @Html.Label("Shipment Allowed By:", new { @Class = "control-label col-sm-2" })
                    <div class="col-sm-3">
                        @{
                            if (Model.tblPermit.tbl_lu_ShipmentAllowedBy != null)
                            {
                                <span class="label-underline-style">
                                    @string.Join(", ", Model.tblPermit.tbl_lu_ShipmentAllowedBy.Select(tlpod => tlpod.name).ToList())
                                </span>
                            }
                        }
                    </div>
                    @Html.Label("Incoterm:", new { @Class = "control-label col-sm-2" })
                    <div class="col-sm-4">
                        @{
                            if (Model.tblPermit.tbl_lu_Incoterm != null)
                            {
                                <span class="label-underline-style">
                                    @string.Join(", ", Model.tblPermit.tbl_lu_Incoterm.Select(tli => tli.name).ToList())
                                </span>
                            }
                        }
                    </div>
                </div>

                <div class="row grid-row">
                    <label class="control-label col-sm-2">
                        Permit Status:<span class="required"></span>
                    </label>
                    <div class="col-sm-3">
                        <span class="label-underline-style">
                            @Model.tblPermit.tbl_lu_Status.name
                        </span>
                    </div>
                    <label class="control-label col-sm-2">
                        Approval Status:<span class="required"></span>
                    </label>
                    <div class="col-sm-4">
                        <span class="label-underline-style">
                            @Model.tblPermit.ApprovalStatus
                        </span>
                    </div>
                </div>

                <div>
                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            NBE Approval Ref. #:<span class="required"></span>
                        </label>
                        <div class="col-sm-3">
                            <span class="label-underline-style">
                                @Model.tblPermit.NBEApprovalRefNumber
                            </span>
                        </div>
                        <label class="control-label col-sm-2">
                            Own Source:<span class="required"></span>
                        </label>
                        <div class="col-sm-4">
                            <span class="label-underline-style">
                                @Model.tblPermit.OwnSourceValue
                            </span>
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Round:<span class="required"></span>
                        </label>
                        <div class="col-sm-3">
                            <span class="label-underline-style">
                                @Model.tblPermit.QueueRound
                            </span>
                        </div>
                        <label class="control-label col-sm-2">
                            Queue #:<span class="required"></span>
                        </label>
                        <div class="col-sm-4">
                            <span class="label-underline-style">
                                @Model.tblPermit.QueueNumber
                            </span>
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            First Priority:<span class="required"></span>
                        </label>
                        <div class="col-sm-10">
                            @foreach (var item in Model.tblPermit.tblItemPriorities.Where(tip => tip.Priority.Equals("First Priority")))
                            {
                                string itemName = string.IsNullOrEmpty(@item.Name)
                                    ? @item.GroupBy
                                    : @item.GroupBy + "-" + @item.Name;
                                <span class="label-underline-style">
                                    @itemName
                                </span><br />
                            }
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Second Priority:<span class="required"></span>
                        </label>
                        <div class="col-sm-10">
                            @foreach (var item in Model.tblPermit.tblItemPriorities.Where(tip => tip.Priority.Equals("Second Priority")))
                            {
                                string itemName = string.IsNullOrEmpty(@item.Name)
                                    ? @item.GroupBy
                                    : @item.GroupBy + "-" + @item.Name;
                                <span class="label-underline-style">
                                    @itemName<br />
                                </span>
                            }
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Third Priority:<span class="required"></span>
                        </label>
                        <div class="col-sm-10">
                            @foreach (var item in Model.tblPermit.tblItemPriorities.Where(tip => tip.Priority.Equals("Third Priority")))
                            {
                                string itemName = string.IsNullOrEmpty(@item.Name)
                                    ? @item.GroupBy
                                    : @item.GroupBy + "-" + @item.Name;
                                <span class="label-underline-style">
                                    @itemName<br />
                                </span>
                            }
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Non-Priority Items:<span class="required"></span>
                        </label>
                        <div class="col-sm-4">
                            <span class="label-underline-style">
                                @Model.tblPermit.NonPriorityItems
                            </span>
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Current Expiries:<span class="required"></span>
                        </label>
                        <div class="col-sm-6">
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Expiry Date</th>
                                        <th>Charge Collected</th>
                                    </tr>
                                </thead>
                                @foreach (var item in Model.tblPermit.tblPOPermitExpiries.OrderByDescending(tppe => tppe.ExpiryDate))
                                {
                                    <tr>
                                        <td>
                                            @item.ExpiryDate.ToString("D")
                                        </td>
                                        <td>
                                            @if (item.ChargeCollected.HasValue)
                                            {
                                                if (item.ChargeCollected.Value)
                                                {
                                                    <span>Yes</span>
                                                }
                                                else
                                                {
                                                    <span>No</span>
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                            </table>
                            <br />
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Current Updates:<span class="required"></span>
                        </label>
                        <div class="col-sm-10">
                            <table id="datatable" class="table table-striped table-bordered">
                                <tr>
                                    <th>Date</th>
                                    <th>Amount</th>
                                    <th>Amount In USD</th>
                                    <th>Amount In Birr</th>
                                    <th>Prepared By</th>
                                    <th>Reason</th>
                                    <th>Status</th>
                                </tr>

                                @foreach (var item in Model.tblPermit.tblPermitAmounts)
                                {
                                    foreach (var itemModel in item.tblPermitAmountDetails)
                                    {
                                        <tr>
                                            <td>@item.CreatedDate.ToString("D")</td>
                                            <td>@itemModel.Amount.ToString("N2")</td>
                                            <td>
                                                @{
                                                    if (itemModel.AmountInUSD.HasValue)
                                                    {
                                                        @itemModel.AmountInUSD.Value.ToString("N2");
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    if (itemModel.AmountInBirr.HasValue)
                                                    {
                                                        @itemModel.AmountInBirr.Value.ToString("N2");
                                                    }
                                                }
                                            </td>
                                            <td>@ViewContext.Controller.getFullNameOfUserById(item.CreatedBy.ToString())</td>
                                            <td>@item.Reason</td>
                                            <td>
                                                @{
                                                    if (item.tbl_lu_Status.name.Equals("Approved"))
                                                    {
                                                        <span class="label label-success">Approved</span>
                                                    }
                                                    else if (item.tbl_lu_Status.name.Equals("Rejected"))
                                                    {
                                                        <a class="POPermitAmountUpdateRejectionComment btn btn-sm btn-danger"
                                                           href="javascript:void(0);" data-id="@item.Id">
                                                            <i class="glyphicon glyphicon-comment"></i>
                                                            Comment
                                                        </a>
                                                    }
                                                    else if (item.tbl_lu_Status.name.Equals("Pending"))
                                                    {
                                                        <span class="label label-default">Pending</span>
                                                    }
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Currency Type:<span class="required"></span>
                        </label>
                        <div class="col-sm-3">
                            <span class="label-underline-style">
                                @Html.DisplayFor(model => model.tblPermit.CurrencyType)
                            </span>
                        </div>
                        <label class="control-label col-sm-2">
                            Amount:<span class="required">*</span>
                        </label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.AmountValue,
                           new { @class = "form-control input-sm", @onchange = "fillTheAmounts()" })
                            @Html.ValidationMessageFor(model => model.AmountValue)
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Rate:<span class="required"></span>
                        </label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(model => model.CurrencyRateValue,
                           new { @class = "form-control input-sm", @readonly = "" })
                            @Html.ValidationMessageFor(model => model.CurrencyRateValue)
                        </div>
                        <label class="control-label col-sm-2">
                            In ETB:<span class="required"></span>
                        </label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.AmountInBirrValue,
                           new { @class = "form-control input-sm", @readonly = "" })
                            @Html.ValidationMessageFor(model => model.AmountInBirrValue)
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            USD Rate:<span class="required"></span>
                        </label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(model => model.USDRateValue,
                           new { @class = "form-control input-sm", @readonly = "" })
                            @Html.ValidationMessageFor(model => model.USDRateValue)
                        </div>
                        <label class="control-label col-sm-2">
                            In USD:<span class="required"></span>
                        </label>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.AmountInUSDValue,
                           new { @class = "form-control input-sm", @readonly = "" })
                            @Html.ValidationMessageFor(model => model.AmountInUSDValue)
                        </div>
                    </div>

                    <div class="row grid-row">
                        <label class="control-label col-sm-2">
                            Reason:<span class="required">*</span>
                        </label>
                        <div class="col-sm-9">
                            @Html.TextAreaFor(model => model.Reason, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.Reason)
                        </div>
                    </div>

                    <div class="row grid-row">
                        <div class="col-sm-offset-2 col-sm-10">
                            <button type="submit" class="btn fa fa-paper-plane btn-success">
                                <span class="button-icon-margin">Submit For Approval</span>
                            </button>
                        </div>
                    </div>

                </div>


            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back To List", "PurchaseOrderPermits", new { merchantId = Model.MerchantId }, new { @class = "btn btn-default fa fa-backward" })
</div>

<script>

    function fillTheAmounts() {
        $("#CurrencyRateValue").val("");
        $("#AmountInBirrValue").val("");
        $("#USDRateValue").val("");
        $("#AmountInUSDValue").val("");
        $.ajax({
            url: '@Url.Action("fillTheAmounts", "Merchant")',
            type: 'POST',
            datatype: 'application/json',
            contentType: 'application/json',
            data: JSON.stringify({ currencyType: $("#CurrencyType").val(), amount: $("#AmountValue").val() }),
            success: function (result) {
                var rawAmount = $("#AmountValue").val().replace(/,/g, '');
                var commaSepAmount = Number(rawAmount).toLocaleString('en-US', { maximumFractionDigits: 6 });
                $("#AmountValue").val(commaSepAmount);
                var currencyDetails = JSON.parse(result);
                $("#CurrencyRateValue").val(currencyDetails.CurrencyRate.toLocaleString('en-US', { maximumFractionDigits: 6 }));
                $("#AmountInBirrValue").val(currencyDetails.AmountInBirr.toLocaleString('en-US', { maximumFractionDigits: 6 }));
                $("#USDRateValue").val(currencyDetails.USDRate.toLocaleString('en-US', { maximumFractionDigits: 6 }));
                $("#AmountInUSDValue").val(currencyDetails.AmountInUSD.toLocaleString('en-US', { maximumFractionDigits: 6 }));
            },
            error: function ()
            {
                alert("Whooaaa! Something went wrong..")
            },
        })
    }

</script>


